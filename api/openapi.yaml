openapi: 3.0.3
info:
  title: Task Management API
  version: 1.0.0
servers:
  - url: http://0.0.0.0:8080/api/v1
  - url: http://localhost:8080/api/v1
  - url: http://127.0.0.1:8080/api/v1
paths:
  /users:
    get:
      tags:
        - users
      summary: Get the current user's information
      operationId: getCurrentUser
      responses:
        "200":
          $ref: "#/components/responses/UserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []  # 認証が必須
    patch:
      tags:
        - users
      summary: Update the current user
      operationId: updateCurrentUser
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequestBody"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/UserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []  # 認証が必須
    delete:
      tags:
        - users
      summary: Delete the current user
      operationId: deleteCurrentUser
      responses:
        "204":
          description: User deleted
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []  # 認証が必須

  /auth/signup:
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        $ref: "#/components/requestBodies/UserCreateRequestBody"
        required: true
      responses:
        "201":
          $ref: "#/components/responses/UserResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []  # X-CSRF-TOKEN を要求             
  /auth/login:
    post:
      summary: Log in a user
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
        required: true
      responses:
        "200":
          description: Login successful
          headers:
            Set-Cookie:
              description: Session or JWT Cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  csrf_token:
                    type: string
                required:
                  - message
                  - auth_token
        "401":
          $ref: "#/components/responses/ErrorResponse"
  /auth/logout:
    post:
      summary: Log out a user
      operationId: logoutUser
      responses:
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                required:
                  - message
      security:
        - CsrfAuth: []  # X-CSRF-TOKEN を要求                     
  /auth/csrf:
    get:
      summary: Get a CSRF token
      operationId: getCsrfToken
      responses:
        "200":
          description: CSRF token retrieved
          content:
            application/json:
              schema:
                type: object
                properties:
                  csrf_token:
                    type: string
                required:
                  - auth_token
  /categories:
    get:
      summary: Get all categories
      operationId: getCategories
      responses:
        "200":
          $ref: "#/components/responses/CategoryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    post:
      summary: Create a new category
      operationId: createCategory
      requestBody:
        $ref: "#/components/requestBodies/CategoryCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/CategoryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
  /categories/{id}:
    get:
      tags:
        - categories
      summary: Get a category by ID
      operationId: getCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/CategoryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    patch:
      tags:
        - categories
      summary: Update a category
      operationId: updateCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/CategoryUpdateRequestBody"
      responses:
        "200":
          $ref: "#/components/responses/CategoryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    delete:
      tags:
        - categories
      summary: Delete a category
      operationId: deleteCategoryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Category deleted
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
  /transactions:
    get:
      tags:
        - transactions
      summary: Get all transactions for the current user
      operationId: getTransactions
      responses:
        "200":
          $ref: "#/components/responses/TransactionResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    post:
      tags:
        - transactions
      summary: Create a new transaction
      operationId: createTransaction
      requestBody:
        $ref: "#/components/requestBodies/TransactionCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/TransactionResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
  /transactions/{id}:
    get:
      tags:
        - transactions
      summary: Get a transaction by ID
      operationId: getTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/TransactionResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    patch:
      tags:
        - transactions
      summary: Update a transaction
      operationId: updateTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/TransactionUpdateRequestBody"
      responses:
        "200":
          $ref: "#/components/responses/TransactionResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    delete:
      tags:
        - transactions
      summary: Delete a transaction
      operationId: deleteTransactionById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Transaction deleted
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []

  /monthly-summaries:
    get:
      tags:
        - monthly summaries
      summary: Get all monthly summaries for the current user
      operationId: getMonthlySummaries
      responses:
        "200":
          $ref: "#/components/responses/MonthlySummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    post:
      tags:
        - monthly summaries
      summary: Create a new monthly summary
      operationId: createMonthlySummary
      requestBody:
        $ref: "#/components/requestBodies/MonthlySummaryCreateRequestBody"
      responses:
        "201":
          $ref: "#/components/responses/MonthlySummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
  /monthly-summaries/{id}:
    get:
      tags:
        - monthly summaries
      summary: Get a monthly summary by ID
      operationId: getMonthlySummaryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          $ref: "#/components/responses/MonthlySummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    patch:
      tags:
        - monthly summaries
      summary: Update a monthly summary by ID
      operationId: updateMonthlySummaryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: "#/components/requestBodies/MonthlySummaryUpdateRequestBody"
      responses:
        "200":
          $ref: "#/components/responses/MonthlySummaryResponse"
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []
    delete:
      tags:
        - monthly summaries
      summary: Delete a monthly summary by ID
      operationId: deleteMonthlySummaryById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Monthly summary deleted
        "400":
          $ref: "#/components/responses/ErrorResponse"
        "404":
          $ref: "#/components/responses/ErrorResponse"
      security:
        - CsrfAuth: []

components:
  securitySchemes:
    CsrfAuth:
      type: apiKey
      in: header
      name: X-CSRF-TOKEN  # カスタムヘッダー名を指定
  schemas:
    UserRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
      required:
        - id
        - name
        - email  
    UserCreateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:  # 必須フィールドを指定
        - name
        - email
        - password          
    UserUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
        - name
        - email
        - password
    CategoryRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          enum: [income, expense]
      required:
        - id
        - name
        - type
    CategoryCreateRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [income, expense]
        user_id:
          type: integer
      required:
        - name
        - type
        - user_id
    CategoryUpdateRequest:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [income, expense]
      required:
        - name
        - type
    TransactionRequest:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        category_id:
          type: integer
        date:
          type: string
          format: date
        amount:
          type: number
          format: float
        content:
          type: string
      required:
        - id
        - user_id
        - category_id
        - date
        - amount
    TransactionCreateRequest:
      type: object
      properties:
        user_id:
          type: integer
        category_id:
          type: integer
        date:
          type: string
          format: date
        amount:
          type: number
          format: float
        content:
          type: string
      required:
        - user_id
        - category_id
        - date
        - amount
    TransactionUpdateRequest:
      type: object
      properties:
        user_id:
          type: integer
        category_id:
          type: integer
        date:
          type: string
          format: date
        amount:
          type: number
          format: float
        content:
          type: string
      required:
        - user_id
        - category_id
        - date
        - amount
    MonthlySummaryRequest:
      type: object
      properties:
        id:
          type: integer
        year_month:
          type: string
        income:
          type: number
          format: float
        expense:
          type: number
          format: float
        balance:
          type: number
          format: float
      required:
        - id
        - year_month
        - income
        - expense
        - balance
    MonthlySummaryCreateRequest:
      type: object
      properties:
        user_id:
          type: integer
        year_month:
          type: string
        income:
          type: number
          format: float
        expense:
          type: number
          format: float
        balance:
          type: number
          format: float
      required:
        - user_id
        - year_month
        - income
        - expense
        - balance
    MonthlySummaryUpdateRequest:
      type: object
      properties:
        income:
          type: number
          format: float
        expense:
          type: number
          format: float
        balance:
          type: number
          format: float
        year_month:
          type: string
      required:
        - income
        - expense
        - balance
        - year_month

  requestBodies:
    UserCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserCreateRequest"
    UserUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequest"
    CategoryCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryCreateRequest"
    CategoryUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryUpdateRequest"
    TransactionCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionCreateRequest"
    TransactionUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionUpdateRequest"               
    MonthlySummaryCreateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MonthlySummaryCreateRequest"
    MonthlySummaryUpdateRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MonthlySummaryUpdateRequest"             

  responses:            
    UserResponse:
      description: User response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserRequest"
    CategoryResponse:
      description: Category response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CategoryRequest"
    TransactionResponse:
      description: Transaction response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TransactionRequest"
    MonthlySummaryResponse:
      description: Monthly summary response
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MonthlySummaryRequest"
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
            required:
              - message
